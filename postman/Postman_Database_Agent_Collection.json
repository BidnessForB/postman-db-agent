{
	"info": {
		"_postman_id": "61fb0905-d5c9-4b6f-ba15-bbdf146fb1ed",
		"name": "Actual API Test",
		"description": "Simple demo of how to use the dbAgent to setup and teardown test data in a collection run.\n\n\\- Setup: Executes on the first invocation of the pre-request script  \n\\- Teardown: Executes conditionally on the invocation of the collection level post-request script based on the value of a state variable (\\`teardown\\`). Set this variable on the last line of the last requests pre-request script.  \n  \nThe requests in the collection are just placeholders.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34829850",
		"_collection_link": "https://brkc-personal.postman.co/workspace/DBAgent~66a6a7ec-c9c4-441e-972e-692ae7c1b2da/collection/34829850-61fb0905-d5c9-4b6f-ba15-bbdf146fb1ed?action=share&source=collection_link&creator=34829850"
	},
	"item": [
		{
			"name": "API Test 1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log('API 1 Pre Req')"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log('API 1 Post Req')"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://postman-echo.com/get?reqName=APITest1",
					"protocol": "http",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "reqName",
							"value": "APITest1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "API A",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log('API A Pre Req')"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log('API A Post Req')"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://postman-echo.com/get?reqName=APIA",
					"protocol": "http",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "reqName",
							"value": "APIA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "API B",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log('API B Pre Req')"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log('API B Post Req')"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://postman-echo.com/get?reqName=APIB",
					"protocol": "http",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "reqName",
							"value": "APIB"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "API Test 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log('API 2 Post Req')",
							"pm.variables.unset('teardown');"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log('API 2 Pre Req')",
							"pm.variables.set('teardown','true');"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://postman-echo.com/get?reqNam e=APITest2",
					"protocol": "http",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "reqNam e",
							"value": "APITest2"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {
					"@brkc-personal/get-custom-sql": {
						"id": "019a1430-59e8-707c-9dd2-8c000fa39d13"
					}
				},
				"requests": {},
				"exec": [
					"const { sendSQL, execProcedure } = pm.require('@brkc-personal/get-custom-sql');",
					"",
					"",
					"//Setup database",
					"",
					"if(pm.variables.get(\"setupComplete\") !== 'true') {",
					"    query = {",
					"    \"query\": \"SELECT * FROM user LIMIT 5\",",
					"    \"params\": []",
					"    }",
					"sendSQL(query)",
					"    .then((res, err) => {",
					"        if (err) {",
					"            console.log(\"Setup error\", err``);",
					"        }",
					"        else if (res) {",
					"            console.log(\"Setup complete \", res);",
					"        }",
					"    })",
					"    .catch((err) => {",
					"        console.log(\"Setup error\", err``);",
					"        ",
					"    })",
					"    .finally(() => {",
					"        pm.variables.set('setupComplete', true);",
					"    });",
					"",
					"}",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {
					"@brkc-personal/get-custom-sql": {
						"id": "019a1430-59e8-707c-9dd2-8c000fa39d13"
					}
				},
				"requests": {},
				"exec": [
					"const { sendSQL, execProcedure } = pm.require('@brkc-personal/get-custom-sql');",
					"",
					"if(pm.variables.get('teardown')) {",
					"    //do teardown",
					"    console.log(\"Tearing down\")",
					"    query = {",
					"    \"query\": \"DELETE FROM user WHERE Userid > 5\",",
					"    \"params\": []",
					"}",
					"",
					"sendSQL(query)",
					"    .then((res, err) => {",
					"        if (err) {",
					"            console.log(\"Teardown error\", err)",
					"        }",
					"        else if (res) {",
					"            console.log(\"Teardown complete\")",
					"        }",
					"        pm.variables.unset('setupComplete')",
					"    })",
					"    .catch((err) => {",
					"        console.log(\"Teardown error: \", err);",
					"    });",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "teardown",
			"value": ""
		}
	]
}