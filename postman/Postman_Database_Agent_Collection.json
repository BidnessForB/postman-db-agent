{
	"info": {
		"_postman_id": "3a124514-752d-42fb-8738-6003ebc9f8bb",
		"name": "Database Agent API",
		"description": "Complete collection for testing the Node.js Database Agent with MySQL stored procedures",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34829850",
		"_collection_link": "https://brkc-personal.postman.co/workspace/DBAgent~66a6a7ec-c9c4-441e-972e-692ae7c1b2da/collection/34829850-3a124514-752d-42fb-8738-6003ebc9f8bb?action=share&source=collection_link&creator=34829850"
	},
	"item": [
		{
			"name": "Health Check",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"health"
							]
						}
					},
					"response": [
						{
							"name": "Health Check",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/health",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"health"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "92"
								},
								{
									"key": "ETag",
									"value": "W/\"5c-Fuugeq2Mk5hDyk1XCJSZufKcs28\""
								},
								{
									"key": "Date",
									"value": "Fri, 24 Oct 2025 02:42:24 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"ok\",\n    \"message\": \"Database agent is running\",\n    \"timestamp\": \"2025-10-24T02:42:24.443Z\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Custom SQL Queries",
			"item": [
				{
					"name": "Execute Custom SQL",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": \"SELECT * FROM user LIMIT 5\",\n  \"params\": []\n}"
						},
						"url": {
							"raw": "http://localhost:3000/api/query",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"query"
							]
						}
					},
					"response": [
						{
							"name": "200 Execute Custom SQL",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query\": \"SELECT * FROM user LIMIT 5\",\n  \"params\": []\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/query",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "863"
								},
								{
									"key": "ETag",
									"value": "W/\"35f-k9ZUvf57VAFWWa6ZoGLTWBsshLs\""
								},
								{
									"key": "Date",
									"value": "Fri, 24 Oct 2025 02:42:35 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"userid\": 1,\n            \"firstname\": \"John\",\n            \"lastname\": \"Smith\",\n            \"email\": \"john.smith@email.com\",\n            \"created_at\": \"2025-10-24T02:02:24.000Z\",\n            \"updated_at\": \"2025-10-24T02:02:24.000Z\"\n        },\n        {\n            \"userid\": 2,\n            \"firstname\": \"Sarah\",\n            \"lastname\": \"Johnson\",\n            \"email\": \"sarah.johnson@email.com\",\n            \"created_at\": \"2025-10-24T02:02:24.000Z\",\n            \"updated_at\": \"2025-10-24T02:02:24.000Z\"\n        },\n        {\n            \"userid\": 3,\n            \"firstname\": \"Michael\",\n            \"lastname\": \"Brown\",\n            \"email\": \"michael.brown@email.com\",\n            \"created_at\": \"2025-10-24T02:02:24.000Z\",\n            \"updated_at\": \"2025-10-24T02:02:24.000Z\"\n        },\n        {\n            \"userid\": 4,\n            \"firstname\": \"Emily\",\n            \"lastname\": \"Davis\",\n            \"email\": \"emily.davis@email.com\",\n            \"created_at\": \"2025-10-24T02:02:24.000Z\",\n            \"updated_at\": \"2025-10-24T02:02:24.000Z\"\n        },\n        {\n            \"userid\": 5,\n            \"firstname\": \"David\",\n            \"lastname\": \"Wilson\",\n            \"email\": \"david.wilson@email.com\",\n            \"created_at\": \"2025-10-24T02:02:24.000Z\",\n            \"updated_at\": \"2025-10-24T02:02:24.000Z\"\n        }\n    ],\n    \"count\": 5\n}"
						}
					]
				},
				{
					"name": "Execute SQL with Parameters",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": \"SELECT * FROM user WHERE firstname = ?\",\n  \"params\": [\"John\"]\n}"
						},
						"url": {
							"raw": "http://localhost:3000/api/query",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"query"
							]
						}
					},
					"response": [
						{
							"name": "200 Execute SQL with Parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query\": \"SELECT * FROM user WHERE firstname = ?\",\n  \"params\": [\"John\"]\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/query",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "197"
								},
								{
									"key": "ETag",
									"value": "W/\"c5-q6q2nHBRP1SzovGm7iYGUQN6MC4\""
								},
								{
									"key": "Date",
									"value": "Fri, 24 Oct 2025 02:42:45 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"userid\": 1,\n            \"firstname\": \"John\",\n            \"lastname\": \"Smith\",\n            \"email\": \"john.smith@email.com\",\n            \"created_at\": \"2025-10-24T02:02:24.000Z\",\n            \"updated_at\": \"2025-10-24T02:02:24.000Z\"\n        }\n    ],\n    \"count\": 1\n}"
						}
					]
				}
			]
		},
		{
			"name": "Stored Procedures",
			"item": [
				{
					"name": "Execute Stored Procedure",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"procedure\": \"AddUserWithAddress\",\n  \"params\": [\"Fred\", \"Gill\", \"fred.gill@yahoo.com\", \"123 Test St\", \"Test City\", \"TS\", \"12345\", \"USA\"]\n}"
						},
						"url": {
							"raw": "http://localhost:3000/api/procedure",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"procedure"
							]
						}
					},
					"response": [
						{
							"name": "GetUserById",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"procedure\": \"GetUserById\",\n  \"params\": [1]\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/procedure",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"procedure"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "399"
								},
								{
									"key": "ETag",
									"value": "W/\"18f-0pKtvttaU0yAKIIsDIb6IMhD2rY\""
								},
								{
									"key": "Date",
									"value": "Fri, 24 Oct 2025 02:21:56 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": [\n        [\n            {\n                \"userid\": 1,\n                \"firstname\": \"John\",\n                \"lastname\": \"Smith\",\n                \"email\": \"john.smith@email.com\",\n                \"created_at\": \"2025-10-24T02:02:24.000Z\",\n                \"addressid\": 1,\n                \"street\": \"123 Main Street\",\n                \"city\": \"New York\",\n                \"state\": \"NY\",\n                \"zipcode\": \"10001\",\n                \"country\": \"USA\"\n            }\n        ],\n        {\n            \"fieldCount\": 0,\n            \"affectedRows\": 0,\n            \"insertId\": 0,\n            \"info\": \"\",\n            \"serverStatus\": 2,\n            \"warningStatus\": 0,\n            \"changedRows\": 0\n        }\n    ],\n    \"count\": 2,\n    \"procedure\": \"GetUserById\"\n}"
						},
						{
							"name": "CreateUserWithAddress",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"procedure\": \"AddUserWithAddress\",\n  \"params\": [\"Fred\", \"Gill\", \"fred.gill@yahoo.com\", \"123 Test St\", \"Test City\", \"TS\", \"12345\", \"USA\"]\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/procedure",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"procedure"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "200"
								},
								{
									"key": "ETag",
									"value": "W/\"c8-tQ4qYsmpDXeKCm475l/OAEFPgQk\""
								},
								{
									"key": "Date",
									"value": "Fri, 24 Oct 2025 02:25:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": [\n        [\n            {\n                \"new_user_id\": 9\n            }\n        ],\n        {\n            \"fieldCount\": 0,\n            \"affectedRows\": 0,\n            \"insertId\": 0,\n            \"info\": \"\",\n            \"serverStatus\": 16386,\n            \"warningStatus\": 0,\n            \"changedRows\": 0\n        }\n    ],\n    \"count\": 2,\n    \"procedure\": \"AddUserWithAddress\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Error Testing",
			"item": [
				{
					"name": "Test Invalid SQL",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": \"SELECT * FROM nonexistent_table\",\n  \"params\": []\n}"
						},
						"url": {
							"raw": "http://localhost:3000/api/query",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"query"
							]
						}
					},
					"response": [
						{
							"name": "Test Invalid SQL",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query\": \"SELECT * FROM nonexistent_table\",\n  \"params\": []\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/query",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"query"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "73"
								},
								{
									"key": "ETag",
									"value": "W/\"49-7Rn6puPad7Vju9vWXf+S6K/sOQo\""
								},
								{
									"key": "Date",
									"value": "Fri, 24 Oct 2025 02:41:48 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": \"Table 'users.nonexistent_table' doesn't exist\"\n}"
						}
					]
				},
				{
					"name": "Test Invalid Procedure",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"procedure\": \"NonExistentProcedure\",\n  \"params\": []\n}"
						},
						"url": {
							"raw": "http://localhost:3000/api/procedure",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"procedure"
							]
						}
					},
					"response": [
						{
							"name": "Test Invalid Procedure",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"procedure\": \"NonExistentProcedure\",\n  \"params\": []\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/procedure",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"procedure"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "79"
								},
								{
									"key": "ETag",
									"value": "W/\"4f-62s1hP/aJhnRNVLJ9hS1qdNkAkY\""
								},
								{
									"key": "Date",
									"value": "Fri, 24 Oct 2025 02:42:08 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": \"PROCEDURE users.NonExistentProcedure does not exist\"\n}"
						}
					]
				},
				{
					"name": "Test Missing Procedure Name",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"params\": []\n}"
						},
						"url": {
							"raw": "http://localhost:3000/api/procedure",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"procedure"
							]
						}
					},
					"response": [
						{
							"name": "Test Missing Procedure Name",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"params\": []\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/procedure",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"procedure"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "54"
								},
								{
									"key": "ETag",
									"value": "W/\"36-9NLBKaJaXzJJ03voUOzl9Ab8IJg\""
								},
								{
									"key": "Date",
									"value": "Fri, 24 Oct 2025 02:42:17 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": \"Procedure name is required\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Scripted",
			"item": [
				{
					"name": "Raw script",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function sendSQL(querySql) {",
									"",
									"    const request = {",
									"        url: \"http://localhost:3000/api/query\",",
									"        method: \"POST\",",
									"        header: {",
									"            \"Content-Type\": \"application/json\"",
									"        },",
									"        body: {",
									"            mode: \"raw\",",
									"            raw: JSON.stringify(",
									"                querySql",
									"",
									"",
									"            )",
									"        }",
									"    }",
									"",
									"",
									"    ",
									"        return new Promise((resolve, reject) => {",
									"            pm.sendRequest(request, (error, response) => {",
									"                if (error) {",
									"                // console.log(error);",
									"                    reject(\"Request failed: \", err);",
									"                }",
									"                const responseBody = response.json();",
									"                ",
									"                resolve(responseBody);",
									"            });",
									"",
									"",
									"    });",
									"    ",
									"}",
									"",
									"function execProcedure(procName, params) {",
									"    const body = {",
									"        \"procedure\": procName,",
									"        \"params\":params",
									"    }",
									"    const request = {",
									"        url: \"http://localhost:3000/api/procedure\",",
									"        method: \"POST\",",
									"        header: {",
									"            \"Content-Type\": \"application/json\"",
									"        },",
									"        body: {",
									"            mode: \"raw\",",
									"            raw: JSON.stringify(",
									"                body",
									"",
									"",
									"            )",
									"        }",
									"    }",
									"",
									"",
									"    ",
									"        return new Promise((resolve, reject) => {",
									"        pm.sendRequest(request, (error, response) => {",
									"            if (error) {",
									"               // console.log(error);",
									"                reject(\"Request failed: \", err);",
									"            }",
									"            const responseBody = response.json();",
									"            ",
									"            resolve(responseBody);",
									"        });",
									"",
									"",
									"    });",
									"    ",
									"}",
									"",
									"query = {",
									"                    \"query\": \"SELECT * FROM user LIMIT 5\",",
									"                    \"params\": []",
									"                }",
									"const results = sendSQL(query).then((res) => {",
									"    console.log(\"sendSQL: \", res);",
									"});",
									"    ",
									"",
									"",
									"const procName = \"GetUserById\";",
									"const params = [1];",
									"const procResults = execProcedure(procName, params).then((res) => {",
									"    console.log(\"execProcedure: \", res);",
									"});    ",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://postman-echo.com/get",
							"protocol": "http",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "As package",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const { sendSQL, execProcedure } = pm.require('@brkc-personal/get-custom-sql');",
									"",
									"",
									"query = {",
									"    \"query\": \"SELECT * FROM user LIMIT 5\",",
									"    \"params\": []",
									"}",
									"",
									"sendSQL(query, 'queryResults').then((res) => {",
									"    console.log('sendSQL: ', res);",
									"});",
									"",
									"const procName = \"GetUserById\";",
									"const params = [1];",
									"",
									"execProcedure(procName, params, 'procResults').then((res) => {",
									"    console.log('execProcedure: ', res);",
									"});;",
									""
								],
								"type": "text/javascript",
								"packages": {
									"@brkc-personal/get-custom-sql": {
										"id": "019a1430-59e8-707c-9dd2-8c000fa39d13"
									}
								},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://postman-echo.com/get",
							"protocol": "http",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000"
		},
		{
			"key": "procResults",
			"value": ""
		},
		{
			"key": "queryResults",
			"value": ""
		}
	]
}